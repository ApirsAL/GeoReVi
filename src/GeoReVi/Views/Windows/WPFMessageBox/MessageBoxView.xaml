<Window x:Name="MessageBoxWindow" 
  x:Class="GeoReVi.MessageBoxView" 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
  MaxWidth="400" 
  AllowsTransparency="True" 
  Background="Transparent" 
  xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
  xmlns:cal="http://www.caliburnproject.org"
  xmlns:fa="http://schemas.fontawesome.io/icons/"
  RenderTransformOrigin="0.5, 0.5" 
  ResizeMode="NoResize" 
  ShowInTaskbar="False" 
  SizeToContent="WidthAndHeight" 
  Title="MessageBox" 
  WindowStartupLocation="CenterOwner" 
  WindowStyle="None"
  TextOptions.TextFormattingMode="Display">
    <Window.RenderTransform>
        <ScaleTransform x:Name="Scale"/>
    </Window.RenderTransform>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation 
                AccelerationRatio="0.4" 
                Duration="00:00:00.15" 
                From="0.6" 
                Storyboard.TargetName="Scale" 
                Storyboard.TargetProperty="(ScaleTransform.ScaleX)" 
                To="1.1"/>
                    <DoubleAnimation 
                AccelerationRatio="0.4" 
                Duration="00:00:00.15" 
                From="0.6" 
                Storyboard.TargetName="Scale" 
                Storyboard.TargetProperty="(ScaleTransform.ScaleY)" 
                To="1.1"/>
                    <DoubleAnimation 
                AccelerationRatio="0.4" 
                Duration="00:00:00.15" 
                From="0" 
                Storyboard.TargetName="MessageBoxWindow" 
                Storyboard.TargetProperty="(Window.Opacity)" 
                To="1"/>
                    <DoubleAnimation 
                BeginTime="00:00:00.15" 
                Duration="00:00:00.1" 
                From="1.1" 
                Storyboard.TargetName="Scale" 
                Storyboard.TargetProperty="(ScaleTransform.ScaleX)" 
                To="1"/>
                    <DoubleAnimation 
                BeginTime="00:00:00.15" 
                Duration="00:00:00.1" 
                From="1.1" 
                Storyboard.TargetName="Scale" 
                Storyboard.TargetProperty="(ScaleTransform.ScaleY)" 
                To="1"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="Unloaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation 
                AccelerationRatio="0.4" 
                Duration="00:00:00.2" 
                From="1" 
                Storyboard.TargetName="Scale" 
                Storyboard.TargetProperty="(ScaleTransform.ScaleX)" 
                To="0.6"/>
                    <DoubleAnimation 
                AccelerationRatio="0.4" 
                Duration="00:00:00.2" 
                From="1" 
                Storyboard.TargetName="Scale" 
                Storyboard.TargetProperty="(ScaleTransform.ScaleY)" 
                To="0.6"/>
                    <DoubleAnimation 
                AccelerationRatio="0.4" 
                Duration="00:00:00.2" 
                From="1" 
                Storyboard.TargetName="MessageBoxWindow" 
                Storyboard.TargetProperty="(Window.Opacity)" 
                To="0"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>
    <Window.Resources>
        <!-- Brushes -->
        <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#E4E9F0"/>
            <GradientStop Offset="1" Color="#D5DDED"/>
        </LinearGradientBrush>
        <!-- Styles -->
        <Style TargetType="Label">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12pt"/>
            <Setter Property="Foreground" Value="#FF003399"/>
        </Style>
        <Style TargetType="Image">
            <Setter Property="Height" Value="32"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Margin" Value="3"/>
        </Style>
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Height" Value="23"/>
            <Setter Property="Width" Value="75"/>
            <Setter Property="Margin" Value="3"/>
        </Style>
    </Window.Resources>
    <!-- Border with Margin = 50 to allow the animation to grow beyond the window's original size.  
  If this was omitted the window would just get cropped when it reached it's original size and try to grow-->
    <Border Margin="50" 
            Background="{StaticResource BackgroundVeryLightBrush}" 
            BorderBrush="{StaticResource ForegroundVeryDarkBrush}" 
            BorderThickness="1" 
            CornerRadius="5"
            Padding="7">
        <DockPanel>
            <Expander Visibility="{Binding Path=HasDetails, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=False, Mode=OneWay, NotifyOnSourceUpdated=True}"
                      x:Name="DetailsExpander" 
                    Margin="0,7,0,0" 
                      DockPanel.Dock="Bottom"
                    Header="Details">
                <DockPanel Margin="3" LastChildFill="True">
                    <TextBox x:Name="DetailsText"
                        Text="{Binding Path=DetailsText, NotifyOnSourceUpdated=True}" 
                        MaxHeight="275" 
                        IsReadOnly="True" 
                        IsReadOnlyCaretVisible="True" 
                        TextWrapping="Wrap" 
                        VerticalScrollBarVisibility="Auto"/>
                </DockPanel>
            </Expander>
            <!-- placeholder for the buttons-->
            <StackPanel DockPanel.Dock="Bottom"
                x:Name="ButtonsPanel" 
                HorizontalAlignment="Center" 
                Orientation="Horizontal">
                <Button x:Name="CancelButton"
                        Tag="Cancel"
                        Content="Cancel"
                        Style="{StaticResource NormalButtonStyle}"
                        IsDefault="True"
                        Visibility="{Binding Path=HasCancel, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=False, Mode=OneWay, NotifyOnSourceUpdated=True}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <cal:ActionMessage MethodName="Close">
                                <cal:Parameter Value="{Binding ElementName=CancelButton, Path=Tag}" />
                            </cal:ActionMessage>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button x:Name="OkButton"
                        Content="Ok"
                        Style="{StaticResource NormalButtonStyle}"
                        Tag="Ok"
                        IsDefault="True"
                        Visibility="{Binding Path=HasOk, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=False, Mode=OneWay, NotifyOnSourceUpdated=True}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <cal:ActionMessage MethodName="Close">
                                <cal:Parameter Value="{Binding ElementName=OkButton, Path=Tag}" />
                            </cal:ActionMessage>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button x:Name="YesButton"
                        Tag="Yes"
                        Content="Yes"
                        Foreground="Green"
                        Style="{StaticResource NormalButtonStyle}"
                        IsDefault="True"
                        Visibility="{Binding Path=HasYes, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=False, Mode=OneWay, NotifyOnSourceUpdated=True}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <cal:ActionMessage MethodName="Close">
                                <cal:Parameter Value="{Binding ElementName=YesButton, Path=Tag}" />
                            </cal:ActionMessage>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button x:Name="NoButton"
                        Content="No"
                        Foreground="Red"
                        Tag="No"
                        Style="{StaticResource NormalButtonStyle}"
                        IsDefault="False"
                        Visibility="{Binding Path=HasNo, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=False, Mode=OneWay, NotifyOnSourceUpdated=True}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <cal:ActionMessage MethodName="Close">
                                <cal:Parameter Value="{Binding ElementName=NoButton, Path=Tag}" />
                            </cal:ActionMessage>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>
            <Image x:Name="ImagePlaceholder" 
                   DockPanel.Dock="Left"
                   Margin="0,0,10,0"/>
            <fa:ImageAwesome x:Name="Information" 
                             Icon="InfoCircle"
                             Foreground="Blue"
                             Height="30"
                             SnapsToDevicePixels="True"
                               DockPanel.Dock="Left"
                               Visibility="{Binding Path=IsInformation, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=False, Mode=OneWay, NotifyOnSourceUpdated=True}"
                               Margin="0,0,10,0"/>
            <fa:ImageAwesome x:Name="Question" 
                   DockPanel.Dock="Left"
                   Icon="Question"
                             Height="30"
                   SnapsToDevicePixels="True"
                   Visibility="{Binding Path=IsQuestion, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=False, Mode=OneWay, NotifyOnSourceUpdated=True}"
                   Margin="0,0,10,0"/>
            <fa:ImageAwesome x:Name="Warning" 
                   DockPanel.Dock="Left"
                   Icon="ExclamationTriangle" 
                             Foreground="Orange"
                             Height="30"
                    SnapsToDevicePixels="True"
                   Visibility="{Binding Path=IsWarning, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=False, Mode=OneWay, NotifyOnSourceUpdated=True}"
                   Margin="0,0,10,0"/>
            <fa:ImageAwesome x:Name="Error" 
                   DockPanel.Dock="Left"
                   Icon="ExclamationCircle" 
                             Foreground="DarkRed"
                             Height="30"
                             SnapsToDevicePixels="True"
                   Visibility="{Binding Path=IsError, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=False, Mode=OneWay, NotifyOnSourceUpdated=True}"
                   Margin="0,0,10,0"/>
            <!-- The label contains a text block to enable text wrapping-->
            <Label x:Name="MessageLabel" 
                   DockPanel.Dock="Right">
                <TextBlock Text="{Binding Path=MessageText, NotifyOnSourceUpdated=True}"
                           x:Name="MessageText"
                           TextWrapping="Wrap"
                           Foreground="{StaticResource ForegroundVeryDarkBrush}"/>
            </Label>
        </DockPanel>
    </Border>
</Window>