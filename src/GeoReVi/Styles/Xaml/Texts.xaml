<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:GeoReVi">
    <ResourceDictionary.MergedDictionaries>
        <!---Order is important here, because ressources can reference to each other
                e.g. if a button gets loaded before the color, the color attribute of the button can't find
                the color due to the missing dictionary-->
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
        <ResourceDictionary>
            <local:BooleanOrConverter x:Key="BooleanOrConverter"/>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <!--Overriding the default style of a textblock for a header style-->
    <Style TargetType="{x:Type TextBlock}" x:Key="HeaderText" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Style.Setters>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="FontFamily" Value="Arial, Century Gothic"></Setter>
            <Setter Property="FontWeight" Value="DemiBold"></Setter>
            <!--<Setter Property="Typography.Capitals" Value="SmallCaps"/>-->
            <Setter Property="Margin" Value="3"></Setter>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="FontFamily" Value="{StaticResource LatoBold}"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}"></Setter>
        </Style.Setters>
    </Style>

    <!--Overriding the default style of a textblock for a gridviewcolumntext style-->
    <Style TargetType="{x:Type TextBlock}" x:Key="GridViewColumnTextStyle" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Style.Setters>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="FontFamily" Value="Arial, Century Gothic"></Setter>
            <Setter Property="Margin" Value="3"></Setter>
            <Setter Property="FontWeight" Value="SemiBold"></Setter>
            <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}"></Setter>
            <Setter Property="Width" Value="auto"></Setter>
        </Style.Setters>
    </Style>

    <!--Template for validation error box-->
    <ControlTemplate x:Key="errorTemplateSilverlightStyle">
        <StackPanel Orientation="Horizontal">
            <Border BorderThickness="1" BorderBrush="#FFdc000c" CornerRadius="0.7"
                VerticalAlignment="Top">
                <Grid>
                    <Polygon x:Name="toolTipCorner"
                         Grid.ZIndex="2"
                         Margin="-1"
                         Points="6,6 6,0 0,0" 
                         Fill="#FFdc000c" 
                         HorizontalAlignment="Right" 
                         VerticalAlignment="Top"
                         IsHitTestVisible="True"/>
                    <Polyline Grid.ZIndex="3"
                          Points="7,7 0,0" Margin="-1" HorizontalAlignment="Right" 
                          StrokeThickness="1.5"
                          StrokeEndLineCap="Round"
                          StrokeStartLineCap="Round"
                          Stroke="White"
                          VerticalAlignment="Top"
                          IsHitTestVisible="True"/>
                    <AdornedElementPlaceholder x:Name="adorner"/>
                </Grid>
            </Border>
            <Border x:Name="errorBorder" Background="#FFdc000c" Margin="1,0,0,0"
                Opacity="0" CornerRadius="1.5"
                IsHitTestVisible="False"
                MinHeight="24" MaxWidth="267">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="2.25" 
                                  Color="Black" 
                                  Opacity="0.4"
                                  Direction="315"
                                  BlurRadius="4"/>
                </Border.Effect>
                <TextBlock Text="{Binding ElementName=adorner,
                                      Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                       Foreground="White" Margin="8,3,8,3" TextWrapping="Wrap"/>
            </Border>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource BooleanOrConverter}">
                        <Binding ElementName="adorner" Path="AdornedElement.IsKeyboardFocused" />
                        <Binding ElementName="toolTipCorner" Path="IsMouseOver"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="fadeInStoryboard">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00.15"
                                         Storyboard.TargetName="errorBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="1"/>
                            <ThicknessAnimation Duration="00:00:00.15"
                                            Storyboard.TargetName="errorBorder"
                                            Storyboard.TargetProperty="Margin"
                                            FillBehavior="HoldEnd"
                                            From="1,0,0,0"
                                            To="5,0,0,0">
                                <ThicknessAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut" Amplitude="2"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="fadeInStoryboard"/>
                    <BeginStoryboard x:Name="fadeOutStoryBoard">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00"
                                         Storyboard.TargetName="errorBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!--Overriding the default style of a textblock-->
    <Style TargetType="{x:Type TextBlock}" x:Key="HeaderTextInput" BasedOn="{StaticResource HeaderText}">
        <Style.Setters>
            <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}"></Setter>
        </Style.Setters>

    </Style>
    
    <!---Style for navigation area-->
    <Style TargetType="{x:Type TextBlock}" x:Key="NavigationTextBlock" BasedOn="{StaticResource HeaderTextInput}">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
        
    <!---Changing the default style of a label-->
    <Style TargetType="{x:Type Label}" x:Key="TextBoxLabel" BasedOn="{StaticResource BaseStyle}">
        <Style.Setters>
            <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}"></Setter>
            <Setter Property="Margin" Value="3"></Setter>
            <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}"></Setter>
            <Setter Property="FontFamily" Value="{StaticResource LatoRegular}"></Setter>
        </Style.Setters>

    </Style>

    <!---Changing the default style of a textbox-->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Padding" Value="2,4"></Setter>
        <Setter Property="FontSize" Value="{StaticResource FontSizeVerySmall}"></Setter>
        <Setter Property="Margin" Value="0,10"></Setter>
        <Setter Property="Width" Value="Auto"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <!---Adapting the template -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <!--TextboxContent-->
                    <Grid MinHeight="{TemplateBinding MinHeight}">
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Focusable="False" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                            </ScrollViewer>
                        </Border>
                                <!--Changing the inserted text of the textblock-->
                                <TextBlock IsHitTestVisible="False"
                                       Text="{TemplateBinding Tag}"
                                       x:Name="placeholder"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Foreground="{StaticResource ApirsMediumGrayBrush}">
                            
                                <!---Adding a data trigger which empties the placeholder when any value except of "" is inserted-->
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>

                                    </TextBlock.Style>
                                </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!---Navigation Textbox-->
    <Style TargetType="{x:Type TextBox}"  BasedOn="{StaticResource {x:Type TextBox}}" x:Key="NavigationTextBoxStyle">
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="MaxHeight" Value="10"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="auto"/>
        <Setter Property="Width" Value="auto"/>
    </Style>
    
    <!---Style for every input label-->
    <Style x:Key="inputLabelHeader" TargetType="{x:Type Label}" BasedOn="{x:Null}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoBold}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeVerySmall}"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Height" Value="40"/>
    </Style>

    <!---Style for every input label-->
    <Style x:Key="inputLabel" TargetType="{x:Type Label}" BasedOn="{x:Null}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeVerySmall}"/>
        
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}"/>
        <Setter Property="Margin" Value="3,5,0,5"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="auto"/>
    </Style>

    <!---Style for every input label-->
    <Style x:Key="inputAddLabel" TargetType="{x:Type Label}" BasedOn="{x:Null}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeVerySmall}"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
    </Style>

    <!---Style for input textboxes-->
    <Style x:Key="inputTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="MaxLength" Value="255"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource errorTemplateSilverlightStyle}"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Background" Value="Red"/>
                <Setter Property="ToolTip" 
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="inputTextBoxWide" BasedOn="{StaticResource inputTextBox}">
        <Setter Property="Width" Value="300"/>
    </Style>

    <!---Base text block style-->
    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeVerySmall}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}"/>
    </Style>

    <!---Making a spinning text template-->
    <Style TargetType="{x:Type TextBlock}"
           x:Key="SpinningText"
           BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"></Setter>
        <Setter Property="Text" Value="&#xf110;"></Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"></Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform/>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <Storyboard x:Key="Spin">
                <DoubleAnimation
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                    From="0"
                    To="360"
                    Duration="0:0:2"
                    RepeatBehavior="Forever" />
            </Storyboard>
        </Style.Resources>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="SpinStoryboard" Storyboard="{StaticResource Spin}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="SpinStoryboard" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type DatePicker}" BasedOn="{x:Null}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Width" Value="150"/>
    </Style>

</ResourceDictionary>